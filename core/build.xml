<!--
 Copyright 2009 Red Hat, Inc.
 All rights reserved.
-->
<project name="core" default="build">

    <description>Core</description>

    <property file="../build.properties"/>
    <property file="build.properties"/>
    <property name="prefix" value=""/>

    <property name="project.dist" value="../dist"/>

    <property name="docs.target" value="${project.dist}/javadoc"/>

    <tstamp>
        <format property="TIMESTAMP" pattern="yyyyMMddHHmmss"/>
    </tstamp>

    <path id="lib.path">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="../common/lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="../common/target/classes"/>
    </path>

    <path id="main.path">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="../common/lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="../common/target/classes"/>
        <pathelement location="target/classes"/>
    </path>

    <path id="test.path">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="../common/lib">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="../lib">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="../common/target/classes"/>
        <pathelement location="target/classes"/>
    </path>

    <target name="init">
        <echo message="Operating System: ${os.name} ${os.version}" />
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
        <condition property="isUnix">
            <and>
                <os family="unix"/>
                <not>
                    <os family="mac"/>
                </not>
            </and>
        </condition>
        <condition property="isMac">
            <os family="mac"/>
        </condition>
        <condition property="test.name.undefined">
          <equals arg1="${test.name}" arg2=""/>
        </condition>
    </target>

    <target name="javacc" depends="init">
        <attrib file="src/java/org/safehaus/penrose/filter/item/*.java" readonly="false"/>
        <javacc
            target="src/java/org/safehaus/penrose/filter/item/ItemParser.jj"
            javacchome="../lib/javacc"
            outputdirectory="src/java/org/safehaus/penrose/filter/item"
        />
        <attrib file="src/java/org/safehaus/penrose/sql/*.java" readonly="false"/>
        <javacc
            target="src/java/org/safehaus/penrose/sql/SQLParser.jj"
            javacchome="../lib/javacc"
            outputdirectory="src/java/org/safehaus/penrose/sql"
        />
    </target>

    <target name="compile" depends="init">
        <echo message="Compiling Core."/>
        <mkdir dir="target/classes"/>
        <javac
            srcdir="src/java"
            destdir="target/classes"
            classpathref="lib.path"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.5"
            target="1.5"
        />
        <copy todir="target/classes">
            <fileset dir="src/java" includes="**/*.properties,**/*.xml,**/*.dtd"/>
        </copy>
<!--
        <mkdir dir="target/tests"/>
        <javac
            srcdir="src/test"
            destdir="target/tests"
            classpathref="test.path"
            debug="on"
            debuglevel="lines,vars,source"
            source="1.5"
            target="1.5"
        />
        <copy todir="target/tests">
            <fileset dir="src/test" includes="**/*.properties,**/*.xml,**/*.dtd"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
-->
    </target>

    <target name="test" depends="singletest,alltest">
    </target>

    <target name="singletest" depends="compile" unless="test.name.undefined">
        <mkdir dir="target/reports"/>
        <junit fork="yes" showoutput="true" printsummary="yes">
            <classpath>
                <fileset dir="../lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="target/classes"/>
                <pathelement location="target/tests"/>
            </classpath>
          <test name="${test.name}" haltonfailure="no"/>
        </junit>
    </target>

    <target name="alltest" depends="compile" if="test.name.undefined">
        <mkdir dir="target/reports"/>
        <junit fork="yes" showoutput="true" printsummary="yes">
            <classpath>
                <fileset dir="../lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="target/classes"/>
                <pathelement location="target/tests"/>
            </classpath>
            <formatter type="plain"/>
            <batchtest todir="target/reports">
                <fileset dir="target/tests">
                    <include name="org/safehaus/penrose/test/**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build" depends="compile">
        <echo message="Building Penrose Core."/>
        <jar jarfile="target/${product.name}-${product.version}.jar">
            <fileset dir="target/classes"/>
            <manifest>
              <attribute name="Specification-Version"  value="${product.specification}"/>
              <attribute name="Implementation-Title"   value="${product.title}"/>
              <attribute name="Implementation-Version" value="${product.version}"/>
              <attribute name="Implementation-Vendor"  value="${product.vendor}"/>
              <attribute name="Build-Date"             value="${TIMESTAMP}"/>
            </manifest>
        </jar>
    </target>

    <target name="docs" depends="init">
        <mkdir dir="target/javadoc"/>
        <javadoc packagenames="org.safehaus.penrose.*"
            sourcepath="src/java"
            destdir="target/javadoc"
            classpathref="lib.path">
        </javadoc>
    </target>

    <target name="docs-publish" depends="init">
        <delete dir="${docs.target}"/>
        <mkdir dir="${docs.target}"/>
        <copy todir="${docs.target}" overwrite="true">
            <fileset dir="target/javadoc" includes="**/*"/>
        </copy>
    </target>

    <target name="dist" depends="build">
        <mkdir dir="${project.dist}"/>
        <copy todir="${project.dist}"
            file="target/${product.name}-${product.version}.jar">
        </copy>
    </target>

    <target name="dist-src" depends="docs">
        <echo message="Creating ${product.name}-${product.version}-src.zip"/>
        <mkdir dir="${project.dist}"/>
        <zip destfile="${project.dist}/${product.name}-${product.version}-src.zip">
            <zipfileset dir=".">
                <exclude name="target/**"/>
            </zipfileset>
        </zip>
        <echo message="Creating ${product.name}-${product.version}-src.tar.gz"/>
        <tar destfile="${project.dist}/${product.name}-${product.version}-src.tar.gz" compression="gzip">
            <tarfileset dir="." prefix="${product.name}-${product.version}">
                <exclude name="target/**"/>
            </tarfileset>
        </tar>
    </target>

    <target name="dist-macosx" depends="dist">
    </target>

    <target name="dist-unix" depends="dist">
    </target>

    <target name="dist-win32" depends="dist">
    </target>

    <target name="dist-all" depends="dist-macosx,dist-unix,dist-win32">
    </target>

    <target name="clean" depends="init">
        <delete dir="dist" failonerror="false"/>
        <delete dir="target" failonerror="false"/>
    </target>

</project>
