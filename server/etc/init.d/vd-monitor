#!/bin/bash
#
# vd-monitor This shell script takes care of starting and stopping ${project.title} Monitor.
#
# chkconfig: - 38 62
# description: ${project.title} Monitor ${product.version}.
# processname: java
# pidfile: /opt/${product.name}-${product.version}/logs/vd-monitor.pid

# Source function library.
. /etc/init.d/functions

# Source networking configuration and check that networking is up.
if [ -r /etc/sysconfig/network ] ; then
    . /etc/sysconfig/network
    [ ${NETWORKING} = "no" ] && exit 0
fi

# Source an auxiliary options file if we have one.
if [ -f "/etc/vd.conf" ] ; then
    . /etc/vd.conf
fi

VD_SERVER_HOME=/opt/${product.name}-${product.version}
VD_MONITOR_SCRIPT=$VD_SERVER_HOME/bin/vd-monitor.sh

[ -x $VD_MONITOR_SCRIPT ] || exit 0

if [ -z "$VD_USER" ] ; then
    VD_USER=root
fi

VD_MONITOR_PROG=vd-monitor

RETVAL=0

function start() {
    echo -n $"Starting $VD_MONITOR_PROG: "
    daemon --user $VD_USER $VD_MONITOR_SCRIPT start
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/vd-monitor
    return $RETVAL
}

function stop() {
    echo -n $"Stopping $VD_MONITOR_PROG: "
    daemon --user $VD_USER $VD_MONITOR_SCRIPT stop
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/vd-monitor /var/run/vd-monitor.args
    return $RETVAL
}

function status() {
    su $VD_USER -c "$VD_MONITOR_SCRIPT status"
    RETVAL=$?
    return $RETVAL
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    reload)
        killproc $VD_MONITOR_PROG -HUP
        RETVAL=$?
        ;;
    condrestart)
        if [ -f /var/lock/subsys/vd-monitor ] ; then
            stop
            start
        fi
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status|condrestart}"
        RETVAL=1
esac

exit $RETVAL
